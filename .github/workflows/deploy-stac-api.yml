name: Deploy STAC API

on:
  push:
    branches:
      - develop

jobs:
  deploy-stac-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: asf-stac-test
            template_bucket: cf-templates-aubvn3i9olmk-us-west-2

    environment:
      name: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Lambda dependencies
        run: make -s install-lambda-deps
      - name: Install pyPgSTAC
        run: make -s install-pypgstac
      - name: Deploy CloudFormation stack
        run: |
          make -s deploy \
            stack_name=${{ matrix.environment }} \
            s3_bucket=${{ matrix.template_bucket }} \
            cloudformation_role_arn=${{ secrets.CLOUDFORMATION_ROLE_ARN }} \
            db_admin_password=${{ secrets.DB_ADMIN_PASSWORD }} \
            db_read_password=${{ secrets.DB_READ_PASSWORD }} \
            vpc_id=${{ secrets.VPC_ID }} \
            subnet_ids=${{ secrets.SUBNET_IDS }} \
            cidr_ip=${{ secrets.CIDR_IP }}
      - name: Get CodeBuild project
        run: |
          echo "CODEBUILD_PROJECT=$(aws cloudformation describe-stacks \
                                    --stack-name ${{ matrix.environment }} \
                                    --query 'Stacks[0].Outputs[?OutputKey==`BuildProject`].OutputValue' \
                                    --output text)" >> $GITHUB_ENV
      - name: Run CodeBuild
        run: python wait_for_codebuild.py
